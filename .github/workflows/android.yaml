name: Android Continuous Integration

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create Google Services JSON File
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          echo "$GOOGLE_SERVICES_JSON" | base64 -d > ./app/google-services.json

      - name: Create Local Properties File
        env:
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
          echo "$LOCAL_PROPERTIES" | base64 -d > local.properties

      - name: Create Key Store File
        env:
          RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
          RELEASE_KEYSTORE_PASSPHRASE: ${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}
        run: |
          echo "$RELEASE_KEYSTORE" > testKeyStore.jks.asc
          gpg -d --passphrase "$RELEASE_KEYSTORE_PASSPHRASE" --batch testKeyStore.jks.asc > app/testKeyStore.jks

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --warning-mode fail

      - name: Save logcat output
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: logcat
          path: artifacts/logcat.log

  codeql-trigger:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Trigger CodeQL analysis
        run: echo "Trigger CodeQL analysis"
